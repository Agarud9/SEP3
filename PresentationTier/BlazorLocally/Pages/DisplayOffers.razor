@page "/DisplayOffers"
@using global::Shared.Models
@using HttpClient.ClientInterfaces
<h3>DisplayOffers</h3>

@if (offers != null)
{
    <div class="d-flex justify-content-around flex-wrap">
        @foreach (var offer in offers)
        {
            <div class="card col-5 m-3">
                <div class="card-header">
                    <img src="@offer.ImagePath" alt="offerImage"/>
                </div>
                <div class="card-body">
                    <h5 class="col-8">@offer.Name</h5>
                    <h6 class="col-4">@offer.Price</h6>
                    <span class="col-8">@offer.Description</span>
                </div>
            </div>
        }
    </div>
}

@if (error || !string.IsNullOrEmpty(msg))
{
    <div class="errorMsg">
        <span>@msg</span>
    </div>
}



@code {
    private IOfferService httpClient;
    private IEnumerable<Offer>? offers;
    private string msg = "";
    private bool error;

    ///summary///
    /// loads all the offers
    /// summary///
    protected override async Task OnInitializedAsync()
    {
        try 
        {
            Offer offer = new Offer(1, "Name", 1, 20.0, true, false, false, "some description", "../wwwroot/Img/default-placeholder.png");
            Offer offer2 = new Offer(1, "Name", 1, 20.0, true, false, false, "some description", "../wwwroot/Img/default-placeholder.png");
            Offer offer3 = new Offer(1, "Name", 1, 20.0, true, false, false, "some description", "../wwwroot/Img/default-placeholder.png");
            Offer offer4 = new Offer(1, "Name", 1, 20.0, true, false, false, "some description", "../wwwroot/Img/default-placeholder.png");

            offers = new[] { offer, offer2, offer3 };
    // offers = await httpClient.GetAsync();
        }
        catch (Exception e)
        {
            error = true;
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}