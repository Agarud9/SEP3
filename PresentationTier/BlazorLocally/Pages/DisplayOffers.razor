@page "/DisplayOffers"
@using global::Shared.Models
@using HttpClient.ClientInterfaces
@inject IOfferService httpClient
<h3>DisplayOffers</h3>
@if (offers == null)
{
    <p>
        <em>Loading...</em>
    </p>
}

@if(offers!=null){
<div class="d-flex justify-content-around flex-wrap">
        @foreach (var offer in offers)
        {
            <div class="card col-5 m-3">
                <div class="card-header">
                    <img src="@offer.Image.AbsoluteUrl" alt="offerImage"/>
                </div>
                <div class="card-body d-flex justify-content-between flex-wrap">
                    <h5 class="col-8">@offer.Name</h5>
                    <h6 class="col-4 d-flex justify-content-end">@offer.Price</h6>
                    <span class="col-8">@offer.Description</span>
                </div>
            </div>
        }
    </div>
}
@if (!string.IsNullOrEmpty(msg))
{
    <div class="errorMsg">
        <span>@msg</span>
    </div>
}



@code {
    private IEnumerable<Offer>? offers;
    private string msg = "";

    ///summary///
    /// loads all the offers
    /// summary///
    protected override async Task OnInitializedAsync()
    {
        try 
        {

    //this below will be used to get the offers from server 
              offers = await httpClient.GetAsync();
            
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}